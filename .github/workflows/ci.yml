name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: tests (ubuntu, py3.11)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out
        uses: actions/checkout@v5
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ubuntu-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ubuntu-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      - name: Run tests with coverage
        run: pytest -q --cov=app --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: false

  lint:
    name: lint (ruff)
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install ruff
        run: python -m pip install ruff==0.6.9
      - name: Ruff check
        run: |
          ruff version
          ruff format --check . || true
          ruff check . || true

  typecheck:
    name: typecheck (mypy)
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install mypy and deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install mypy==1.13.0 pydantic==2.8.2 pandas==2.2.2 numpy==1.26.4
      - name: Run mypy
        run: mypy app || true

  audit:
    name: security (pip-audit)
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          python -m pip install pip-audit==2.7.3
      - name: Audit dependencies
        run: pip-audit -r requirements.txt --strict || true


  bandit:
    name: security (bandit)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install bandit
        run: |
          python -m pip install --upgrade pip
          python -m pip install bandit==1.7.9
      - name: Run bandit
        run: bandit -r app -q -ll || true

  smoke:
    name: api smoke (ubuntu)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      - name: Start uvicorn
        env:
          METRICS_ENABLED: "0"
        run: |
          python -m uvicorn app.main:app --port 8765 --host 127.0.0.1 &
          echo $! > uv.pid
          sleep 2
      - name: Probe endpoints
        run: |
          curl -sS http://127.0.0.1:8765/healthz | tee /dev/stderr | grep -q '"ok"'
          curl -sS http://127.0.0.1:8765/version | tee /dev/stderr | grep -q '"version"'
      - name: Stop uvicorn
        if: always()
        run: |
          kill $(cat uv.pid) || true

  docker:
    name: docker build & push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
